Using ``matrix_divided``
------------------------

Check if all matrix items are int or float
Check size of all rows of matrix to be the same length
Check if div is int or float
Check if the value of div is zero
Return new matrix


First import ``2-matrix_divided``

	>>>matrix_divided = __import__(`2-matrix_divided`).matrix_divided

Now use it:

Basic usage:
	>>>matrix = [[1, 2, 3], [4, 5, 6]]
	>>>print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Non int or float matrix element:

	>>>matrix = [[1, 'say', 3], [4, 5, 6]]
	>>>print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix rows not with same size:

	>>>matrix = [[1, 2, 3], [4, 5]]
	>>>print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Non int or float div value:

	>>>matrix = [[1, 2, 3], [4, 5, 6]]
	>>>print(matrix_divided(matrix, '3'))
	Traceback (most recent call last):
	...
	TypeError: div must be a number

Zero value of div

	>>>matrix = [[1, 2, 3], [4, 5, 6]]
	>>>print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero

Empty matrix input:

	>>>matrix =[[]]
	>>>print(matrix_divided(matrix, 3))
	[[]]

No input:
	>>>print(matrix_divided())
	Traceback (most recent call last):
	...
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
